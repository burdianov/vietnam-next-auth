import type { GetServerSideProps, NextPage } from 'next';
import { Session } from 'next-auth';
import Head from 'next/head';
import { useState, useEffect } from 'react';
import axios from 'axios';
import { toast } from 'react-toastify';

import { TodoType } from '../types';
import Nav from '../components/nav';
import TodoInput from '../components/todo-input';
import TodoItem from '../components/todo-item';
import { getSession } from 'next-auth/react';

interface HomeProps {
  session: Session;
}

const Home: NextPage<HomeProps> = () => {
  const [todos, setTodos] = useState<TodoType[]>([]);
  const [loading, setLoading] = useState(false);

  useEffect(() => {
    const fetchTodo = async () => {
      try {
        setLoading(true);

        const res = await axios.get<TodoType[]>('/api/todo');

        setTodos(res.data);
        setLoading(false);
      } catch (err) {
        toast.error(err.response.data.msg);
        setLoading(false);
      }
    };
    fetchTodo();
  }, []);

  return (
    <div className="">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        {/* <link rel="icon" href="/favicon.ico" /> */}
      </Head>

      <div>
        <Nav />
        <main className="">
          <TodoInput />
          <div>
            {todos.map((todo) => (
              <TodoItem key={todo.id} todo={todo} />
            ))}
          </div>
        </main>
      </div>

      {loading && <h2>Loading...</h2>}

      <footer className=""></footer>
    </div>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session: Session = await getSession(context);

  if (!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false
      }
    };
  }

  return {
    props: { session }
  };
};
